"use strict";(self.webpackChunksoftware_construction=self.webpackChunksoftware_construction||[]).push([[8940],{7890:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"angular_from_scratch/reactive_vs_template-driven_forms","title":"Formularios reactivos vs. template-driven","description":"Angular proporciona dos enfoques principales para manejar formularios:","source":"@site/docs/03_angular_from_scratch/12_reactive_vs_template-driven_forms.md","sourceDirName":"03_angular_from_scratch","slug":"/angular_from_scratch/reactive_vs_template-driven_forms","permalink":"/Software_Construction/docs/angular_from_scratch/reactive_vs_template-driven_forms","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_angular_from_scratch/12_reactive_vs_template-driven_forms.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"Estilos con TailwindCSS o Angular Material","permalink":"/Software_Construction/docs/angular_from_scratch/styles_with_tailwindcss_or_angular_material"},"next":{"title":"Validaci\xf3n de formularios (sincr\xf3nica y asincr\xf3nica)","permalink":"/Software_Construction/docs/angular_from_scratch/form_validation_synchronous_and_asynchronous"}}');var i=r(4848),o=r(8453);const s={sidebar_position:12},l="Formularios reactivos vs. template-driven",t={},c=[{value:"Formularios Template-driven",id:"formularios-template-driven",level:2},{value:"Formularios Reactivos",id:"formularios-reactivos",level:2},{value:"Comparativa r\xe1pida",id:"comparativa-r\xe1pida",level:2},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:2},{value:"Referencias",id:"referencias",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"formularios-reactivos-vs-template-driven",children:"Formularios reactivos vs. template-driven"})}),"\n",(0,i.jsx)(n.p,{children:"Angular proporciona dos enfoques principales para manejar formularios:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Template-driven (basados en plantillas)"}),": la l\xf3gica del formulario se define principalmente en el HTML usando directivas de Angular (",(0,i.jsx)(n.code,{children:"ngModel"}),", ",(0,i.jsx)(n.code,{children:"ngForm"}),", etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reactive Forms (reactivos)"}),": la l\xf3gica del formulario se define en TypeScript mediante clases y estructuras reactivas (",(0,i.jsx)(n.code,{children:"FormGroup"}),", ",(0,i.jsx)(n.code,{children:"FormControl"}),", ",(0,i.jsx)(n.code,{children:"FormBuilder"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Ambos enfoques usan el mismo ",(0,i.jsx)(n.strong,{children:"m\xf3dulo de formularios"})," de Angular y se pueden combinar, aunque se recomienda elegir uno de ellos por consistencia."]}),"\n",(0,i.jsx)(n.h2,{id:"formularios-template-driven",children:"Formularios Template-driven"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Declarativos: el ",(0,i.jsx)(n.strong,{children:"HTML es el que define el formulario"})," y su comportamiento."]}),"\n",(0,i.jsxs)(n.li,{children:["Usa directivas como ",(0,i.jsx)(n.code,{children:"ngModel"})," y ",(0,i.jsx)(n.code,{children:"ngForm"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Angular crea los objetos de formulario de ",(0,i.jsx)(n.strong,{children:"forma impl\xedcita"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Ideal para formularios simples."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:'<form #loginForm="ngForm" (ngSubmit)="onSubmit(loginForm)">\n  <input type="text" name="username" ngModel required />\n  <input type="password" name="password" ngModel required />\n  <button type="submit">Login</button>\n</form>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"showLineNumbers",children:"onSubmit(form: any) {\n  console.log(form.value); // { username: '', password: '' }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"C\xf3mo ventajas tenemos:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sintaxis simple y declarativa."}),"\n",(0,i.jsx)(n.li,{children:"F\xe1cil de usar para formularios peque\xf1os."}),"\n",(0,i.jsx)(n.li,{children:"Menor cantidad de c\xf3digo TypeScript."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Por otro lado, las desventajas son:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dif\xedcil de escalar en formularios complejos."}),"\n",(0,i.jsx)(n.li,{children:"Menor control sobre el estado y validaciones."}),"\n",(0,i.jsx)(n.li,{children:"Testing menos directo."}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    actor Usuario\n    participant Template as HTML Template\n    participant Angular as Angular FormsModule\n    participant NgForm as ngForm/ngModel\n\n    Usuario->>Template: Ingresa datos en el input (ngModel)\n    Template->>Angular: Detecta cambios (Two-way Data Binding)\n    Angular->>NgForm: Actualiza estado de formulario (value, valid)\n    NgForm--\x3e>Template: Refresca UI con errores/valores\n    Usuario->>Template: Env\xeda formulario (submit)\n    Template->>NgForm: ngSubmit se dispara\n    NgForm--\x3e>Angular: Entrega datos recolectados\n    Angular--\x3e>Componente: Llama al m\xe9todo onSubmit(form.value)"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["El usuario interact\xfaa con el HTML (input con ",(0,i.jsx)(n.code,{children:"[(ngModel)]"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Angular detecta cambios con su sistema de data binding bidireccional."}),"\n",(0,i.jsx)(n.li,{children:"NgForm y ngModel mantienen el estado del formulario (valores, validaciones, touched, pristine, etc.)."}),"\n",(0,i.jsx)(n.li,{children:"Angular actualiza la vista autom\xe1ticamente si hay errores o cambios."}),"\n",(0,i.jsx)(n.li,{children:"El usuario env\xeda el formulario."}),"\n",(0,i.jsx)(n.li,{children:"Al enviar el formulario, el evento ngSubmit se dispara."}),"\n",(0,i.jsx)(n.li,{children:"El modelo re\xfane recolecta todos los datos."}),"\n",(0,i.jsxs)(n.li,{children:["Se llama el m\xe9todo ",(0,i.jsx)(n.code,{children:"onSubmit()"})," con los datos recolectados."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"La l\xf3gica del formulario se encuentra principalmente en el template, y Angular gestiona autom\xe1ticamente el estado."}),"\n",(0,i.jsx)(n.h2,{id:"formularios-reactivos",children:"Formularios Reactivos"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Imperativos: el ",(0,i.jsx)(n.strong,{children:"formulario se define y controla en el TypeScript"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Usa APIs de ",(0,i.jsx)(n.code,{children:"FormControl"}),", ",(0,i.jsx)(n.code,{children:"FormGroup"}),", ",(0,i.jsx)(n.code,{children:"FormArray"})," y ",(0,i.jsx)(n.code,{children:"FormBuilder"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"M\xe1s expresivos y escalables."}),"\n",(0,i.jsxs)(n.li,{children:["Ideal para ",(0,i.jsx)(n.strong,{children:"formularios grandes o din\xe1micos"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="login-page.ts" showLineNumbers',children:"import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'login-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './login-page.html'\n})\nexport class LoginPage {\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit() {\n    console.log(this.loginForm.value);\n  }\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<form [formGroup]="loginForm" (ngSubmit)="onSubmit()">\n  <input type="text" formControlName="username" />\n  <input type="password" formControlName="password" />\n  <button type="submit">Login</button>\n</form>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Estos formularios tienen c\xf3mo ventajas:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Control total sobre el estado y validaciones."}),"\n",(0,i.jsx)(n.li,{children:"M\xe1s f\xe1cil de testear."}),"\n",(0,i.jsx)(n.li,{children:"Soporta l\xf3gica de negocio compleja y formularios din\xe1micos."}),"\n",(0,i.jsxs)(n.li,{children:["Integraci\xf3n fluida con ",(0,i.jsx)(n.strong,{children:"Reactive programming"})," (RxJS)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Pero,"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sintaxis algo m\xe1s extensa."}),"\n",(0,i.jsx)(n.li,{children:"M\xe1s c\xf3digo en TypeScript."}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    actor Usuario\n    participant Template as HTML Template\n    participant FormGroup as FormGroup/FormControl\n    participant Angular as Angular ReactiveFormsModule\n    participant Componente as TS Component\n\n    Usuario->>Template: Ingresa datos en el input (formControlName)\n    Template->>FormGroup: Actualiza FormControl asociado\n    FormGroup->>Angular: Cambia el estado (valueChanges)\n    Angular--\x3e>Componente: Emite evento reactivo (valueChanges observable)\n    Componente->>FormGroup: Puede reaccionar (validaciones din\xe1micas)\n    Usuario->>Template: Env\xeda formulario (submit)\n    Template->>FormGroup: Se obtiene el estado actual\n    Componente->>FormGroup: this.form.value (datos y validaciones)"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["El usuario interact\xfaa con un input asociado a un ",(0,i.jsx)(n.code,{children:"FormControl"})," v\xeda ",(0,i.jsx)(n.code,{children:"formControlName"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Angular actualiza el ",(0,i.jsx)(n.code,{children:"FormControl"})," inmediatamente (unidireccionalmente)."]}),"\n",(0,i.jsxs)(n.li,{children:["El ",(0,i.jsx)(n.code,{children:"FormGroup"})," y sus ",(0,i.jsx)(n.code,{children:"FormControls"})," emiten eventos por ",(0,i.jsx)(n.code,{children:"valueChanges"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Se emite un evento reactivo que actualiza las validaciones."}),"\n",(0,i.jsx)(n.li,{children:"El componente puede reaccionar a los cambios en tiempo real usando observables."}),"\n",(0,i.jsx)(n.li,{children:"El usuario env\xeda el formulario."}),"\n",(0,i.jsxs)(n.li,{children:["Al hacer submit, el template obtiene el estado actual y lo env\xeda al ",(0,i.jsx)(n.code,{children:"FormGroup"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"El componente obtiene el valor del formulario (this.form.value) y su estado (valid, dirty, etc.)."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"La l\xf3gica del formulario est\xe1 en el componente TypeScript, y Angular ofrece control total y reactividad."}),"\n",(0,i.jsx)(n.h2,{id:"comparativa-r\xe1pida",children:"Comparativa r\xe1pida"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Caracter\xedstica"}),(0,i.jsx)(n.th,{children:"Template-driven"}),(0,i.jsx)(n.th,{children:"Reactive Forms"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Declaraci\xf3n"}),(0,i.jsx)(n.td,{children:"Principalmente en HTML"}),(0,i.jsx)(n.td,{children:"Principalmente en TypeScript"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Complejidad"}),(0,i.jsx)(n.td,{children:"Formularios simples"}),(0,i.jsx)(n.td,{children:"Formularios grandes/din\xe1micos"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Validaciones"}),(0,i.jsxs)(n.td,{children:["Directivas en plantilla (",(0,i.jsx)(n.code,{children:"required"}),")"]}),(0,i.jsxs)(n.td,{children:["Clases de validaci\xf3n (",(0,i.jsx)(n.code,{children:"Validators"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Testing"}),(0,i.jsx)(n.td,{children:"Menos directo"}),(0,i.jsx)(n.td,{children:"M\xe1s sencillo"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Reactividad"}),(0,i.jsx)(n.td,{children:"Limitada"}),(0,i.jsx)(n.td,{children:"Completa (integrado con RxJS)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Control del estado"}),(0,i.jsx)(n.td,{children:"Angular lo maneja impl\xedcitamente"}),(0,i.jsx)(n.td,{children:"Control total del desarrollador"})]})]})]}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n    subgraph Template-driven\n    A["HTML (ngModel)"] --\x3e B["NgForm/NgModel"]\n    B --\x3e C["Estado gestionado por Angular"]\n    C --\x3e A\n    C --\x3e|submit| D["Componente recibe form.value"]\n    end\n\n    subgraph Reactive Forms\n    E["HTML (formControlName)"] --\x3e F["FormControl/FormGroup"]\n    F --\x3e|valueChanges| G["Componente"]\n    G --\x3e F\n    G --\x3e|submit| H["Procesa this.form.value"]\n    end'}),"\n",(0,i.jsx)(n.h2,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Usa ",(0,i.jsx)(n.strong,{children:"Reactive Forms"})," si tu aplicaci\xf3n:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tiene formularios complejos"}),"\n",(0,i.jsx)(n.li,{children:"Requiere validaciones avanzadas"}),"\n",(0,i.jsx)(n.li,{children:"Necesita din\xe1micamente a\xf1adir/quitar campos"}),"\n",(0,i.jsx)(n.li,{children:"Va a ser muy testeada"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Usa ",(0,i.jsx)(n.strong,{children:"Template-driven"})," si:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tu formulario es peque\xf1o y simple"}),"\n",(0,i.jsx)(n.li,{children:"Quieres escribir la m\xednima cantidad de TypeScript"}),"\n",(0,i.jsx)(n.li,{children:"El formulario no necesita l\xf3gica avanzada"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Angular Team. (2024). ",(0,i.jsx)(n.a,{href:"https://angular.dev/guide/forms",children:"Reactive forms vs template-driven forms."})," Angular.dev."]}),"\n",(0,i.jsx)(n.li,{children:"Eckles, J. (2023). Advanced Angular Forms. Packt Publishing."}),"\n",(0,i.jsx)(n.li,{children:"Brown, S. (2024). Clean Angular Architecture. Leanpub."}),"\n",(0,i.jsxs)(n.li,{children:["Netanel Basal. (2023). ",(0,i.jsx)(n.a,{href:"https://netbasal.com",children:"Best practices with Angular Reactive Forms."})]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var a=r(6540);const i={},o=a.createContext(i);function s(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);