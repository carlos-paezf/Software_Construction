"use strict";(self.webpackChunksoftware_construction=self.webpackChunksoftware_construction||[]).push([[1514],{3393:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"angular_from_scratch/form_validation_synchronous_and_asynchronous","title":"Validaci\xf3n de formularios (sincr\xf3nica y asincr\xf3nica)","description":"La validaci\xf3n de formularios es el proceso mediante el cual se verifica que los datos ingresados por el usuario cumplen con ciertas reglas antes de procesarlos.","source":"@site/docs/03_angular_from_scratch/13_form_validation_synchronous_and_asynchronous.md","sourceDirName":"03_angular_from_scratch","slug":"/angular_from_scratch/form_validation_synchronous_and_asynchronous","permalink":"/Software_Construction/en/docs/angular_from_scratch/form_validation_synchronous_and_asynchronous","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_angular_from_scratch/13_form_validation_synchronous_and_asynchronous.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Formularios reactivos vs. template-driven","permalink":"/Software_Construction/en/docs/angular_from_scratch/reactive_vs_template-driven_forms"},"next":{"title":"Manejo de estados en formularios","permalink":"/Software_Construction/en/docs/angular_from_scratch/state_management_in_forms"}}');var i=r(4848),s=r(8453);const o={sidebar_position:13},l="Validaci\xf3n de formularios (sincr\xf3nica y asincr\xf3nica)",c={},d=[{value:"Validaci\xf3n sincr\xf3nica",id:"validaci\xf3n-sincr\xf3nica",level:2},{value:"Template-driven Forms (sincr\xf3nica)",id:"template-driven-forms-sincr\xf3nica",level:3},{value:"Reactive Forms (sincr\xf3nica)",id:"reactive-forms-sincr\xf3nica",level:3},{value:"Validadores personalizados (sincr\xf3nicos)",id:"validadores-personalizados-sincr\xf3nicos",level:3},{value:"Validaci\xf3n asincr\xf3nica",id:"validaci\xf3n-asincr\xf3nica",level:2},{value:"Reactive Forms (asincr\xf3nica)",id:"reactive-forms-asincr\xf3nica",level:3},{value:"Template-driven Forms (asincr\xf3nica)",id:"template-driven-forms-asincr\xf3nica",level:3},{value:"Uso de validaciones sincr\xf3nicas y asincr\xf3nicas",id:"uso-de-validaciones-sincr\xf3nicas-y-asincr\xf3nicas",level:2},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:2},{value:"Referencias",id:"referencias",level:2}];function t(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"validaci\xf3n-de-formularios-sincr\xf3nica-y-asincr\xf3nica",children:"Validaci\xf3n de formularios (sincr\xf3nica y asincr\xf3nica)"})}),"\n",(0,i.jsxs)(e.p,{children:["La ",(0,i.jsx)(e.strong,{children:"validaci\xf3n de formularios"})," es el proceso mediante el cual se verifica que los datos ingresados por el usuario ",(0,i.jsx)(e.strong,{children:"cumplen con ciertas reglas"})," antes de procesarlos."]}),"\n",(0,i.jsx)(e.p,{children:"En Angular, las validaciones se pueden aplicar de forma:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Sincr\xf3nica:"})," Validaciones inmediatas que no requieren operaciones externas."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Asincr\xf3nica:"})," Validaciones que dependen de operaciones externas (consultas a API, bases de datos, etc.)."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"validaci\xf3n-sincr\xf3nica",children:"Validaci\xf3n sincr\xf3nica"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Se ejecuta de forma inmediata al cambiar el valor del campo."}),"\n",(0,i.jsx)(e.li,{children:"Ideal para reglas de formato, longitud, obligatoriedad, etc."}),"\n",(0,i.jsx)(e.li,{children:"No depende de servicios externos."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"template-driven-forms-sincr\xf3nica",children:"Template-driven Forms (sincr\xf3nica)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",metastring:"showLineNumbers",children:'<form #form="ngForm">\n  <input name="email" ngModel required email />\n  <div *ngIf="form.controls[\'email\']?.invalid && form.controls[\'email\']?.touched">\n    El email es obligatorio y debe tener formato v\xe1lido\n  </div>\n</form>\n'})}),"\n",(0,i.jsxs)(e.p,{children:["Angular provee validadores integrados como ",(0,i.jsx)(e.code,{children:"required"}),", ",(0,i.jsx)(e.code,{children:"email"}),", ",(0,i.jsx)(e.code,{children:"minlength"}),", etc."]}),"\n",(0,i.jsx)(e.h3,{id:"reactive-forms-sincr\xf3nica",children:"Reactive Forms (sincr\xf3nica)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",metastring:"showLineNumbers",children:"import { FormBuilder, Validators } from '@angular/forms';\n\nthis.loginForm = this.fb.group({\n  username: ['', [Validators.required, Validators.minLength(3)]],\n  password: ['', Validators.required]\n});\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",metastring:"showLineNumbers",children:"<input formControlName=\"username\" />\n<div *ngIf=\"loginForm.get('username')?.hasError('required')\">\n  El usuario es obligatorio\n</div>\n<div *ngIf=\"loginForm.get('username')?.hasError('minlength')\">\n  Debe tener al menos 3 caracteres\n</div>\n"})}),"\n",(0,i.jsx)(e.h3,{id:"validadores-personalizados-sincr\xf3nicos",children:"Validadores personalizados (sincr\xf3nicos)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",metastring:"showLineNumbers",children:"import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport function noAdminValidator(control: AbstractControl): ValidationErrors | null {\n  return control.value === 'admin' ? { noAdmin: true } : null;\n}\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",metastring:"showLineNumbers",children:"this.form = this.fb.group({\n  username: ['', [Validators.required, noAdminValidator]]\n});\n"})}),"\n",(0,i.jsx)(e.h2,{id:"validaci\xf3n-asincr\xf3nica",children:"Validaci\xf3n asincr\xf3nica"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Ejecuta la validaci\xf3n ",(0,i.jsx)(e.strong,{children:"despu\xe9s"})," de las validaciones sincr\xf3nicas."]}),"\n",(0,i.jsx)(e.li,{children:"Depende de operaciones externas (consultas a un API, base de datos, etc.)."}),"\n",(0,i.jsxs)(e.li,{children:["Devuelve un ",(0,i.jsx)(e.strong,{children:"Observable"})," o ",(0,i.jsx)(e.strong,{children:"Promise"})," que resuelve ",(0,i.jsx)(e.code,{children:"null"})," si es v\xe1lido o un objeto de error si es inv\xe1lido."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"reactive-forms-asincr\xf3nica",children:"Reactive Forms (asincr\xf3nica)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",metastring:"showLineNumbers",children:"import { of } from 'rxjs';\nimport { map, delay } from 'rxjs/operators';\nimport { AbstractControl, AsyncValidatorFn } from '@angular/forms';\n\nfunction usernameExistsValidator(): AsyncValidatorFn {\n  return (control: AbstractControl) => {\n    // Simula consulta al servidor\n    const usuariosExistentes = ['carlos', 'david'];\n    return of(usuariosExistentes.includes(control.value)).pipe(\n      delay(1000),\n      map(existe => (existe ? { userExists: true } : null))\n    );\n  };\n}\n\nthis.form = this.fb.group({\n  username: ['', Validators.required, usernameExistsValidator()]\n});\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",metastring:"showLineNumbers",children:"<input formControlName=\"username\" />\n<div *ngIf=\"form.get('username')?.hasError('userExists')\">\n  Este usuario ya existe\n</div>\n"})}),"\n",(0,i.jsx)(e.h3,{id:"template-driven-forms-asincr\xf3nica",children:"Template-driven Forms (asincr\xf3nica)"}),"\n",(0,i.jsx)(e.p,{children:"Para este tipo de formularios, es necesario implementar una directiva que act\xfae como validador asincr\xf3nico:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",metastring:"showLineNumbers",children:"import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\n\n@Directive({\n  selector: '[userExists]',\n  providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: UserExistsDirective, multi: true }]\n})\nexport class UserExistsDirective {\n  validate(control: AbstractControl) {\n    const usuariosExistentes = ['carlos', 'ana'];\n    return of(usuariosExistentes.includes(control.value)).pipe(\n      delay(1000),\n      map(existe => (existe ? { userExists: true } : null))\n    );\n  }\n}\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:"<input name=\"username\" ngModel required userExists />\n<div *ngIf=\"form.controls['username']?.hasError('userExists')\">\n  Este usuario ya existe\n</div>\n"})}),"\n",(0,i.jsx)(e.h2,{id:"uso-de-validaciones-sincr\xf3nicas-y-asincr\xf3nicas",children:"Uso de validaciones sincr\xf3nicas y asincr\xf3nicas"}),"\n",(0,i.jsx)(e.mermaid,{value:"sequenceDiagram\n    autonumber\n    actor Usuario\n    participant FormControl\n    participant ValidadorSync as Validador Sincr\xf3nico\n    participant ValidadorAsync as Validador Asincr\xf3nico\n    participant Servidor\n\n    Usuario->>FormControl: Ingresa valor\n    FormControl->>ValidadorSync: Ejecuta validaciones sincr\xf3nicas\n    ValidadorSync--\x3e>FormControl: Devuelve error o null\n    alt Si es v\xe1lido sincr\xf3nicamente\n      FormControl->>ValidadorAsync: Llama validaci\xf3n asincr\xf3nica\n      ValidadorAsync->>Servidor: Consulta externa (API)\n      Servidor--\x3e>ValidadorAsync: Respuesta\n      ValidadorAsync--\x3e>FormControl: Devuelve error o null\n    end\n    FormControl--\x3e>Usuario: Muestra estado (v\xe1lido/inv\xe1lido)"}),"\n",(0,i.jsx)(e.p,{children:"Angular procesa las validaciones de un campo (FormControl) en dos fases:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Validaci\xf3n sincr\xf3nica: Reglas inmediatas (ej. required, minLength)."}),"\n",(0,i.jsx)(e.li,{children:"Validaci\xf3n asincr\xf3nica: Reglas que requieren comunicaci\xf3n con servicios externos (ej. verificar que un usuario no exista en el servidor)."}),"\n"]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"El usuario ingresa un valor en el formulario."}),"\n",(0,i.jsxs)(e.li,{children:["El ",(0,i.jsx)(e.code,{children:"FormControl"})," detecta el cambio y ejecuta las validaciones sincr\xf3nicas."]}),"\n",(0,i.jsx)(e.li,{children:"El validador sincr\xf3nico analiza el valor ingresado y retorna un error o null seg\xfan el caso."}),"\n",(0,i.jsxs)(e.li,{children:["En caso de que se halla validado sincr\xf3nicamente, el ",(0,i.jsx)(e.code,{children:"FormControl"})," llama a las validaciones asincr\xf3nicas."]}),"\n",(0,i.jsx)(e.li,{children:"El validador realiza una consulta externa (API) para verificar la condici\xf3n."}),"\n",(0,i.jsx)(e.li,{children:"El servidor entrega una respuesta a la consulta hecha."}),"\n",(0,i.jsx)(e.li,{children:"El validador asincr\xf3nico recibe la respuesta y seg\xfan la misma, retorna un error o un null."}),"\n",(0,i.jsxs)(e.li,{children:["El ",(0,i.jsx)(e.code,{children:"FormControl"})," procesa la respuesta del validador asincr\xf3nico y actualiza su estado (v\xe1lido o inv\xe1lido)"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Usa ",(0,i.jsx)(e.strong,{children:"validaciones sincr\xf3nicas"})," para ",(0,i.jsx)(e.strong,{children:"reglas simples y comunes"})," (obligatoriedad, formato, longitud)."]}),"\n",(0,i.jsxs)(e.li,{children:["Usa ",(0,i.jsx)(e.strong,{children:"validaciones asincr\xf3nicas"})," solo ",(0,i.jsx)(e.strong,{children:"cuando sea necesario"})," (por ejemplo, verificar datos en servidor)."]}),"\n",(0,i.jsxs)(e.li,{children:["Evita validaciones asincr\xf3nicas en cada tecla: aplica ",(0,i.jsx)(e.code,{children:"debounceTime()"})," en observables o validaciones bajo demanda."]}),"\n",(0,i.jsx)(e.li,{children:"Mant\xe9n los validadores personalizados reutilizables y testables."}),"\n",(0,i.jsxs)(e.li,{children:["Combina validaciones en grupos (",(0,i.jsx)(e.code,{children:"FormGroup"}),") si dependen de m\xfaltiples campos."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"referencias",children:"Referencias"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Angular Team. (2024). ",(0,i.jsx)(e.a,{href:"https://angular.dev/guide/forms",children:"Form validation guide."})," Angular.dev."]}),"\n",(0,i.jsxs)(e.li,{children:["Netanel Basal. (2023). ",(0,i.jsx)(e.a,{href:"https://netbasal.com",children:"Async Validators in Angular Forms."})]}),"\n",(0,i.jsx)(e.li,{children:"Brown, S. (2024). Clean Angular Architecture. Leanpub."}),"\n",(0,i.jsx)(e.li,{children:"Eckles, J. (2023). Advanced Angular Forms and Validations. Packt Publishing."}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(t,{...n})}):t(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>l});var a=r(6540);const i={},s=a.createContext(i);function o(n){const e=a.useContext(s);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);